S          -> MAIN ‘.’
B          -> '{' MAIN { MAIN } '}'
MAIN       -> OPERATOR | LABEL ':' OPERATOR
OPERATOR   -> IF | ASSIGNMENT | GOTO | INT_OPS | PRINT | B
IF         -> 'if' EXPR OPERATOR [ 'else' OPERATOR ]
ASSIGNMENT -> VAR '=' EXPR
GOTO       -> 'goto' LABEL
INT_OPS    -> 'turn' | PROD | BUILD | BUY | SELL
PROD	   -> 'prod' '(' EXPR ')'
BUILD	   -> ’build' '(' EXPR ')'
BUY		   -> 'buy' '(' EXPR ',' EXPR ')'
SELL	   -> ’sell' '(' EXPR ',' EXPR ')'
FUNCTION   -> ‘?’FUNCTION1 [ ‘(‘ EXPR {,EXPR} ')' ]
FUNCTION1  -> ‘raw’ | ‘raw_price’| …
PRINT      -> 'print' '(' PRINT_ARG {',' PRINT_ARG } ')'
PRINT_ARG  -> EXPR | STRING
EXPR       -> EXPR1 [ '=' | '<' | '>' ] EXPR1 | EXPR1
EXPR1      -> T {[ '+' | '-' | '|' ] T}
T          -> F {[ '*' | '/' | '&' ] F}
F	       -> '-' F1 | '!' F1 | F1
F1         -> VAR | NUM | FUNCTION | '(' EXPR ')'

STRING     -> '"' { CHAR } '"'
VAR        -> ID [ '[' EXPR ']' ]
ID         -> CHAR | ID CHAR | ID DIGIT
NUM        -> DIGIT | NUM DIGIT
CHAR       -> a | b | ... | z | A | B | ... | Z
DIGIT      -> 0 | 1 | ... | 9









